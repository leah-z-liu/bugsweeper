{"version":3,"sources":["img/bug.svg","img/face.svg","components/Cell.js","helpers.js","components/Map.js","App.js","index.js"],"names":["module","exports","isFinished","Cell","props","flagHandler","evt","preventDefault","state","clicked","flag","setState","clickHandler","handleClicks","value","target","alert","style","backgroundColor","cols","parentElement","children","length","rows","i","j","document","getElementById","click","endGame","this","row","column","isBug","classes","id","className","onClick","onContextMenu","src","bugImg","alt","flagImg","Component","generateMap","col","outerArr","innerArr","push","placeBugs","map","bugCount","bugRow","Math","floor","random","bugCol","populateMap","addOneToNeighbors","undefined","Map","mapSize","cellsClicked","safeCells","theMap","item","key","subItem","App","class","href","ReactDOM","render"],"mappings":"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","file":"static/js/main.75ad089e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bug.13d04569.svg\";","module.exports = __webpack_public_path__ + \"static/media/face.8ab36a6d.svg\";","import React, { Component } from \"react\";\n\nimport bugImg from \"../img/bug.svg\";\nimport flagImg from \"../img/face.svg\";\n\nlet isFinished = false;\n\nexport default class Cell extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicked: false,\n      flag: \"\"\n    };\n  }\n\n  flagHandler = evt => {\n    evt.preventDefault();\n    if (!this.state.clicked) {\n      if (this.state.flag) {\n        this.setState({\n          flag: \"\"\n        });\n      } else {\n        this.setState({\n          flag: true\n        });\n      }\n    }\n  };\n\n  clickHandler = evt => {\n    let { handleClicks, value } = this.props;\n    if (!this.state.flag) {\n      this.setState({\n        clicked: true\n      });\n    }\n    if (!this.state.clicked) {\n      handleClicks();\n    }\n\n    if (!isFinished) {\n      if (value === \"bug\" && !this.state.flag) {\n        endGame(evt.target);\n      }\n    }\n  };\n\n  render() {\n    // deconstruct\n    let { row, column, value } = this.props;\n    let { clicked, flag } = this.state;\n\n    // add different class names based on different status\n    const isBug = value === \"bug\" ? \"isBug\" : \"\";\n    const isClicked = clicked ? \"clicked\" : \"\";\n    const classes = `cell ${isClicked} ${isBug}`;\n\n    return (\n      <td\n        id={`${row}_${column}`}\n        className={classes}\n        onClick={this.clickHandler}\n        onContextMenu={this.flagHandler}\n      >\n        {clicked && !flag && value === \"bug\" ? (\n          <img src={bugImg} alt=\"\"></img>\n        ) : clicked && !flag && value !== \"bug\" ? (\n          value\n        ) : (\n          \"\"\n        )}\n\n        {flag && <img src={flagImg} alt=\"\"></img>}\n      </td>\n    );\n  }\n}\n\n// function clickArea(target, row, column) {\n//   target.id = `${row}_${column}_`;\n//   const rows = [row - 1, row, row + 1];\n//   const cols = [column - 1, column, column + 1];\n//   for (let i of rows) {\n//     for (let j of cols) {\n//       setImmediate(() => {\n//         if (document.getElementById(`${i}_${j}`))\n//           document.getElementById(`${i}_${j}`).click();\n//       });\n//     }\n//   }\n// }\n\nfunction endGame(target) {\n  isFinished = true;\n  alert(\"Game over!\");\n  target.style.backgroundColor = \"black\";\n  let cols = target.parentElement.children.length;\n  let rows = target.parentElement.parentElement.children.length;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      if (document.getElementById(`${i}_${j}`))\n        document.getElementById(`${i}_${j}`).click();\n    }\n  }\n}\n","export function generateMap(row, col) {\n  let outerArr = [];\n  for (let i = 0; i < row; i++) {\n    let innerArr = [];\n    for (let j = 0; j < col; j++) {\n      innerArr.push(\"\");\n    }\n    outerArr.push(innerArr);\n  }\n\n  return outerArr;\n}\n\nexport function placeBugs(map, bugCount) {\n  const rows = map.length;\n  const cols = map[0].length;\n\n  while (bugCount) {\n    let bugRow = Math.floor(Math.random() * rows);\n    let bugCol = Math.floor(Math.random() * cols);\n\n    if (!map[bugRow][bugCol]) {\n      map[bugRow][bugCol] = \"bug\";\n      bugCount--;\n    }\n  }\n\n  return map;\n}\n\nexport function populateMap(map) {\n  const rows = map.length;\n  const cols = map[0].length;\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      if (map[i][j] === \"bug\") {\n        addOneToNeighbors(map, i, j);\n      }\n    }\n  }\n  return map;\n}\n\nfunction addOneToNeighbors(map, i, j) {\n  const rows = [i - 1, i, i + 1];\n  const cols = [j - 1, j, j + 1];\n\n  for (let row of rows) {\n    if (map[row]) {\n      for (let col of cols) {\n        if (map[row][col] !== undefined && map[row][col] !== \"bug\") {\n          if (map[row][col]) {\n            map[row][col]++;\n          } else {\n            map[row][col] = 1;\n          }\n        }\n      }\n    }\n  }\n  return map;\n}\n","import React, { Component } from \"react\";\nimport Cell from \"./Cell\";\n\nimport { generateMap, placeBugs, populateMap } from \"../helpers\";\n\nexport default class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mapSize: 10,\n      bugCount: 10,\n      theMap: populateMap(placeBugs(generateMap(10, 10), 15)),\n      cellsClicked: 0\n    };\n  }\n\n  handleClicks = () => {\n    let { mapSize, bugCount, cellsClicked } = this.state;\n    let safeCells = mapSize * mapSize - bugCount;\n    this.setState({\n      cellsClicked: cellsClicked++\n    });\n    if (cellsClicked === safeCells) {\n      alert(\"You won!!\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <table>\n          <tbody>\n            {this.state.theMap.map((item, row) => {\n              return (\n                <tr key={row} className=\"mapRow\">\n                  {item.map((subItem, col) => {\n                    return (\n                      <Cell\n                        key={col}\n                        row={row}\n                        column={col}\n                        value={subItem}\n                        handleClicks={this.handleClicks}\n                      />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport Map from \"./components/Map\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <h1>Welcome to Bugsweeper</h1>\n      <div class=\"btn\">\n        <a href=\".\">Start again!</a>\n      </div>\n      <Map />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}